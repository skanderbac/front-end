{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport * as api from \"../utils/wardrobe\";\nexport const createwardrobe = createAsyncThunk(\"wardrobe\", async (dresses, thunkAPI) => {\n  const response = await api.ajoutdress(dresses);\n  return response.data;\n});\nexport const getClasification = createAsyncThunk(\"wardrobe\", async (img, thunkAPI) => {\n  const response = await api.getClasification(img);\n  return response.data;\n});\nlet initialState = {\n  values: []\n};\nexport const WardrobeSlice = createSlice({\n  name: \"Wardrobe\",\n  initialState,\n  reducers: {\n    getwardrobe: (state, action) => {\n      state.values = action.payload;\n    },\n    getPreferencesP: (state, action) => {\n      state.values = action.payload;\n    },\n    deletewardrobe: (state, action) => {\n      const payload = action.payload;\n      state.values = state.values.filter(dress => dress._id !== payload);\n    }\n  },\n  extraReducers: {\n    [createwardrobe.fulfilled]: (state, action) => {\n      state.values.push(action.payload.data);\n    },\n    [getClasification.fulfilled]: (state, action) => {\n      state.values.push(action.payload.data);\n      console.log(action.payload.data);\n    }\n  }\n});\nexport const {\n  getwardrobe,\n  getPreferencesP,\n  deletewardrobe\n} = WardrobeSlice.actions; //thunk\n\nexport const affichage = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getDresses();\n    dispatch(getwardrobe(data));\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const affichagePreferences = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.getPreferences(\"Ethnic\", \"Men\");\n    dispatch(getPreferencesP(data));\n    console.log(data);\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const supprimer = id => async dispatch => {\n  try {\n    await api.deleteDresses(id);\n    dispatch(deletewardrobe(id));\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const selectwardrobe = state => state.Wardrobe.values;\nexport const selectPreferences = state => state.Wardrobe.values;\nexport default WardrobeSlice.reducer;","map":{"version":3,"sources":["C:/Users/skand/Desktop/ForkStack-onlineWardrobe/Front-end/src/Pages/WardrobeSlice.js"],"names":["createAsyncThunk","createSlice","api","createwardrobe","dresses","thunkAPI","response","ajoutdress","data","getClasification","img","initialState","values","WardrobeSlice","name","reducers","getwardrobe","state","action","payload","getPreferencesP","deletewardrobe","filter","dress","_id","extraReducers","fulfilled","push","console","log","actions","affichage","dispatch","getDresses","error","message","affichagePreferences","getPreferences","supprimer","id","deleteDresses","selectwardrobe","Wardrobe","selectPreferences","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport  * as api from \"../utils/wardrobe\";\n\n\nexport const createwardrobe = createAsyncThunk(\n    \"wardrobe\",\n    async (dresses, thunkAPI) => {\n        const response = await api.ajoutdress(dresses);\n        return response.data;\n    }\n);\n\nexport const getClasification = createAsyncThunk(\n    \"wardrobe\",\n    async (img, thunkAPI) => {\n        const response = await api.getClasification(img);\n        return response.data;\n    }\n);\n\nlet initialState = {\n    values: [],\n};\nexport const WardrobeSlice = createSlice({\n    name: \"Wardrobe\",\n    initialState,\n    reducers: {\n        getwardrobe: ( state ,action)=> {\n            state.values = action.payload\n        },\n        getPreferencesP: ( state ,action)=> {\n            state.values = action.payload\n        },\n        deletewardrobe:(state ,action)=>{\n            const payload=action.payload;\n            state.values=state.values.filter((dress)=>dress._id!==payload);\n        }\n\n    },\n    extraReducers: {\n        [createwardrobe.fulfilled]: (state, action) => {\n            state.values.push(action.payload.data);\n        },\n        [getClasification.fulfilled]: (state, action) => {\n            state.values.push(action.payload.data);\n            console.log(action.payload.data)\n        },\n    },\n\n\n});\n\nexport const {\n    getwardrobe,\n    getPreferencesP,\n    deletewardrobe\n} = WardrobeSlice.actions;\n\n//thunk\nexport const affichage = () => async (dispatch) => {\n    try {\n        const { data } = await api.getDresses();\n\n        dispatch(getwardrobe(data));\n        console.log(data)\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const affichagePreferences = () => async (dispatch) => {\n    try {\n        const { data } = await api.getPreferences(\"Ethnic\",\"Men\");\n\n        dispatch(getPreferencesP(data));\n        console.log(data)\n    } catch (error) {\n        console.log(error.message);\n    }\n};\n\nexport const supprimer = (id) => async (dispatch) => {\n    try {\n        await api.deleteDresses(id);\n        dispatch(deletewardrobe(id));\n    } catch (error) {\n        console.log(error.message);\n    }\n};\nexport const selectwardrobe = (state) => state.Wardrobe.values;\n\nexport const selectPreferences = (state) => state.Wardrobe.values;\n\nexport default WardrobeSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}